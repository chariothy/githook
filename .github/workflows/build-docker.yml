# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - v*  # Ex. v20201117
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Set output
      id: vars
      run: |
        echo ::set-output name=date::$(date +'%Y%m%d')
        echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
        echo ::set-output name=rep::$(echo $GITHUB_REPOSITORY | sed 's/-docker$//')

    # Runs a single command using the runners shell
    - name: Install buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PWD }}
    
    # Runs a set of commands using the runners shell
    - name: Build the image
      run: |
        docker buildx build --push \
            --tag ${{ steps.vars.outputs.rep }}:${{ matrix.python-version }} \
            --tag ${{ steps.vars.outputs.rep }}:${{ matrix.python-version }}-latest \
            --tag ${{ steps.vars.outputs.rep }}:${{ matrix.python-version }}-${{ steps.vars.outputs.tag }} \
            --build-arg PYVER=${{ matrix.python-version }} \
            --platform linux/amd64 .